syntax = "proto2";

package principia.serialization;

message QP {
  required XYZ q = 1;
  required XYZ p = 2;
}

message XYZ {
  required double x = 1;
  required double y = 2;
  required double z = 3;
}

message Method {
  extensions 5000 to 5999;  // Last used: 5004.
}

message DeletePlugin {
  extend Method {
    optional DeletePlugin extension = 5000;
  }
  message In {
    required fixed64 plugin = 1;
  }
  message Out {
    required fixed64 plugin = 1;
  }
  required In in = 1;
  required Out out = 2;
}

message DirectlyInsertCelestial {
  extend Method {
    optional DirectlyInsertCelestial extension = 5003;
  }
  message In {
    required fixed64 plugin = 1;
    required int32 celestial_index = 2;
    optional int32 parent_index = 3;
    required string gravitational_parameter = 4;
    optional string axis_right_ascension = 5;
    optional string axis_declination = 6;
    optional string j2 = 7;
    optional string reference_radius = 8;
    required string x = 9;
    required string y = 10;
    required string z = 11;
    required string vx = 12;
    required string vy = 13;
    required string vz = 14;
  }
  required In in = 1;
}

message GetBufferDuration {
  extend Method {
    optional GetBufferDuration extension = ;
  }
  message Return {
    required int32 seconds = 1;
  }
  required Return return = 3;
}

message GetBufferedLogging {
  extend Method {
    optional GetBufferedLogging extension = ;
  }
  message Return {
    required int32 max_severity = 1;
  }
  required Return return = 3;
}

message GetStderrLogging {
  extend Method {
    optional GetStderrLogging extension = ;
  }
  message Return {
    required int32 min_severity = 1;
  }
  required Return return = 3;
}

message GetSuppressedLogging {
  extend Method {
    optional GetSuppressedLogging extension = ;
  }
  message Return {
    required int32 min_severity = 1;
  }
  required Return return = 3;
}

message GetVerboseLogging {
  extend Method {
    optional GetVerboseLogging extension = ;
  }
  message Return {
    required int32 level = 1;
  }
  required Return return = 3;
}

message InitGoogleLogging {
  extend Method {
    optional InitGoogleLogging extension = 5002;
  }
}

message InsertCelestial {
  extend Method {
    optional InsertCelestial extension = 5004;
  }
  message In {
    required fixed64 plugin = 1;
    required int32 celestial_index = 2;
    required double gravitational_parameter = 3;
    required int32 parent_index = 4;
    required QP from_parent = 5;
  }
  required In in = 1;
}

message LogError {
  extend Method {
    optional LogError extension = ;
  }
  message In {
    required string message = 1;
  }
  required In in = 1;
}

message LogFatal {
  extend Method {
    optional LogFatal extension = ;
  }
  message In {
    required string message = 1;
  }
  required In in = 1;
}

message LogInfo {
  extend Method {
    optional LogInfo extension = ;
  }
  message In {
    required string message = 1;
  }
  required In in = 1;
}

message LogWarning {
  extend Method {
    optional LogWarning extension = ;
  }
  message In {
    required string message = 1;
  }
  required In in = 1;
}

message NewPlugin {
  extend Method {
    optional NewPlugin extension = 5001;
  }
  message In {
    required double initial_time = 1;
    required double planetarium_rotation_in_degrees = 2;
  }
  message Return {
    required fixed64 plugin = 1;
  }
  required In in = 1;
  required Return return = 3;
}

message SetBufferDuration {
  extend Method {
    optional SetBufferDuration extension = ;
  }
  message In {
    required int32 seconds = 1;
  }
  required In in = 1;
}

message SetBufferedLogging {
  extend Method {
    optional SetBufferedLogging extension = ;
  }
  message In {
    required int32 max_severity = 1;
  }
  required In in = 1;
}

message SetStderrLogging {
  extend Method {
    optional SetStderrLogging extension = ;
  }
  message In {
    required int32 min_severity = 1;
  }
  required In in = 1;
}

message SetSuppressedLogging {
  extend Method {
    optional SetSuppressedLogging extension = ;
  }
  message In {
    required int32 min_severity = 1;
  }
  required In in = 1;
}

message SetVerboseLogging {
  extend Method {
    optional SetVerboseLogging extension = ;
  }
  message In {
    required int32 level = 1;
  }
  required In in = 1;
}
