syntax = "proto2";

import "serialization/geometry.proto";
import "serialization/physics.proto";
import "serialization/quantities.proto";

package principia.serialization;

message Celestial {
  required MassiveBody body = 1;
  required HistoryAndProlongation history_and_prolongation = 2;
}

message HistoryAndProlongation {
  required Trajectory history = 1;
  required Trajectory.Pointer prolongation = 2;
}

message Part {
  required Pair degrees_of_freedom = 1;
  required Quantity mass = 2;
  required Multivector gravitational_acceleration_to_be_applied_by_ksp = 3;
}

message PhysicsBubble {
  message FullState {
    message Vessel {
      message PartIdAndPart {
        required int32 part_id = 1;
        required Part part = 2;
      }
      required string guid = 1;
      required Pair degrees_of_freedom = 2;  // From centre of mass.
      repeated PartIdAndPart part = 3;
    }
    repeated Vessel vessel = 1;
    required Pair centre_of_mass = 2;
    required Trajectory centre_of_mass_trajectory = 3;
    required Multivector displacement_correction = 4;
    required Multivector velocity_correction = 5;
  }
  required MasslessBody body = 1;
  optional FullState current = 2;
}

message Plugin {
  // TODO(egg): Find better identifiers for the following |message|s, they are
  // more than just map entries now.
  message GuidToVessel {
    required string guid = 1;
    required Vessel vessel = 2;
    required int32 parent_index = 3;
    required bool dirty = 4;
  }
  message IndexToCelestial {
    required int32 index = 1;
    required Celestial celestial = 2;
    optional int32 parent_index = 3;
  }
  repeated GuidToVessel vessels = 1;
  repeated IndexToCelestial celestials = 2;
  required PhysicsBubble bubble = 3;
  required Quantity planetarium_rotation = 4;
  required Point current_time = 5;
  required int32 sun_index = 6;
}

message Vessel {
  required MasslessBody body = 1;
  oneof trajectory_bundle {
    HistoryAndProlongation history_and_prolongation = 2;
    Trajectory owned_prolongation = 3;
  }
}
