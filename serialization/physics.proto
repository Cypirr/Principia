syntax = "proto2";

import "serialization/geometry.proto";
import "serialization/quantities.proto";

package principia.serialization;

message Body {
  oneof body {
    MassiveBody massive_body = 1;
    MasslessBody massless_body = 2;
  }
}

message ContinuousTrajectory {
  message InstantaneousDegreesOfFreedom {
    required Point instant = 1;
    required Pair degrees_of_freedom = 2;
  }
  required Quantity step = 1;
  required Quantity tolerance = 2;
  required Quantity adjusted_tolerance = 3;
  required bool is_unstable = 4;
  required int32 degree = 5;
  required int32 degree_age = 6;
  repeated ChebyshevSeries series = 7;
  optional Quantity first_time = 8;
  repeated InstantaneousDegreesOfFreedom last_points = 9;
}

message MassiveBody {
  required Quantity gravitational_parameter = 1;
  extensions 2000 to 2999;  // Last used: 2001.
}

message MasslessBody {}

message OblateBody {
  extend MassiveBody {
    optional OblateBody oblate_body = 2001;
  }
  required Frame frame = 3;
  required Quantity j2 = 1;
  required Multivector axis = 2;
}

message Trajectory {
  message InstantaneousDegreesOfFreedom {
    required Point instant = 1;
    required Pair degrees_of_freedom = 2;
  }
  message Pointer {
    message Fork {
      required int32 children_distance = 1;
      required int32 timeline_distance = 2;
    }
    repeated Fork fork = 1;
  }
  message Litter {
    required Point fork_time = 1;
    repeated Trajectory trajectories = 2;
  }
  repeated Litter children = 1;
  repeated InstantaneousDegreesOfFreedom timeline = 2;
}
