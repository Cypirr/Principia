syntax = "proto2";

import "serialization/geometry.proto";
import "serialization/quantities.proto";

package principia.serialization;

message Body {
  oneof body {
    MassiveBody massive_body = 1;
    MasslessBody massless_body = 2;
  }
}

message Frame {
  // The frame tags used in the plugin.
  enum PluginTag {
    ALICE_SUN = 1;
    ALICE_WORLD = 2;
    BARYCENTRIC = 3;
    RENDERING = 4;
    WORLD = 5;
    WORLD_SUN = 6;
  }

  // The frame tags used in the solar system simulation.
  enum SolarSystemTag {
    ICRF_J2000_ECLIPTIC = 1;
    ICRF_J2000_EQUATOR = 2;
  }

  required fixed32 tag_type_fingerprint = 1;
  required int32 tag = 2;
  required bool is_inertial = 3;
}

message MassiveBody {
  required Quantity gravitational_parameter = 1;
  extensions 2000 to 2999;  // Last used: 2001.
}

message MasslessBody {}

message OblateBody {
  extend MassiveBody {
    optional OblateBody oblate_body = 2001;
  }
  required Quantity j2 = 1;
  required Multivector axis = 2;
}

message Trajectory {
  message Litter {
    required Point fork_time = 1;
    repeated Trajectory trajectories = 2;
  }
  message InstantaneousDegreesOfFreedom {
    required Point instant = 1;
    required Pair degrees_of_freedom = 2;
  }
  // TODO(egg): Body.
  repeated Litter children = 1;
  repeated InstantaneousDegreesOfFreedom timeline = 2;
  // TODO(egg): Intrinsic acceleration.
}
