syntax = "proto2";

import "serialization/numerics.proto";
import "serialization/quantities.proto";

package principia.serialization;

// TODO(phl): This message seems unused as we don't ever serialize/deserialize
// an |Integrator|.  Remove it.
message Integrator {
  extensions 3000 to 3999;  // Last used: 3001.
}

message AdaptiveStepSizeIntegrator {
  extend Integrator {
    optional AdaptiveStepSizeIntegrator extension = 3000;
  }
  enum Kind {
    DORMAND_ELMIKKAWY_PRINCE_1986_RKN_434FM = 1;
  }
  required Kind kind = 1;
}

message FixedStepSizeIntegrator {
  extend Integrator {
    optional FixedStepSizeIntegrator extension = 3001;
  }
  enum Kind {
    DUMMY = 0;  // For testing.
    BLANES_MOAN_2002_SRKN_6B = 1;
    BLANES_MOAN_2002_SRKN_11B = 2;
    BLANES_MOAN_2002_SRKN_14A = 3;
    MCLACHLAN_1995_SB3A_4 = 4;
    MCLACHLAN_1995_SB3A_5 = 5;
    MCLACHLAN_ATELA_1992_ORDER_4_OPTIMAL = 6;
    MCLACHLAN_ATELA_1992_ORDER_5_OPTIMAL = 7;
    OKUNBOR_SKEEL_1994_ORDER_6_METHOD_13 = 8;
    QUINLAN_1999_ORDER_8A = 9;
    QUINLAN_1999_ORDER_8B = 10;
    QUINLAN_TREMAINE_1990_ORDER_8 = 11;
    QUINLAN_TREMAINE_1990_ORDER_10 = 12;
    QUINLAN_TREMAINE_1990_ORDER_12 = 13;
    QUINLAN_TREMAINE_1990_ORDER_14 = 14;
  }
  required Kind kind = 1;
}

message IntegratorInstance {
  extensions 7000 to 7999;  // Last used: 7001

  required SystemState current_state = 1;
}

message AdaptiveStepSizeIntegratorInstance {
  extend IntegratorInstance {
    optional AdaptiveStepSizeIntegratorInstance extension = 7001;
  }
  extensions 9000 to 9999;  // Last used: 9000
  message AdaptiveStepSize {
    required Quantity first_time_step = 1;
    required double safety_factor = 2;
    required int64 max_steps = 3;
  }
  required AdaptiveStepSize adaptive_step_size = 1;
  required AdaptiveStepSizeIntegrator integrator = 2;
}

message EmbeddedExplicitRungeKuttaNystromIntegratorInstance {
  extend AdaptiveStepSizeIntegratorInstance {
    optional EmbeddedExplicitRungeKuttaNystromIntegratorInstance
        extension = 9000;
  }
}

message FixedStepSizeIntegratorInstance {
  extend IntegratorInstance {
    optional FixedStepSizeIntegratorInstance extension = 7000;
  }
  extensions 8000 to 8999;  // Last used: 8001
  required Quantity step = 1;
  required FixedStepSizeIntegrator integrator = 2;
}

message SymmetricLinearMultistepIntegratorInstance {
  extend FixedStepSizeIntegratorInstance {
    optional SymmetricLinearMultistepIntegratorInstance extension = 8000;
  }
  message Step {
    repeated DoublePrecision displacements = 1;
    repeated Quantity accelerations = 2;
    required DoublePrecision time = 3;
  }
  repeated Step previous_steps = 1;
}

message SymplecticRungeKuttaNystromIntegratorInstance {
  extend FixedStepSizeIntegratorInstance {
    optional SymplecticRungeKuttaNystromIntegratorInstance extension = 8001;
  }
}

message SystemState {
  repeated DoublePrecision position = 1;
  repeated DoublePrecision velocity = 2;
  required DoublePrecision time = 3;
}
