<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!--Define project configurations.  Nothing interesting can happen here.-->
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|Win32">
      <Configuration>Debug</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_LLVM|Win32">
      <Configuration>Release_LLVM</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release_LLVM|x64">
      <Configuration>Release_LLVM</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|Win32">
      <Configuration>Release</Configuration>
      <Platform>Win32</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  
  <!--Microsoft C++ stuff.-->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />

  <!--Definitions.-->
  <PropertyGroup>
    <!--Predicates.-->
    <PrincipiaCompilerClangLLVM>false</PrincipiaCompilerClangLLVM>
    <PrincipiaCompilerClangLLVM Condition="$(Configuration)==Release_LLVM">true</PrincipiaCompilerClangLLVM>
    <PrincipiaOptimize>false</PrincipiaOptimize>
    <PrincipiaOptimize Condition="$(Configuration)==Release or
                                  $(Configuration)==Release_LLVM">true</PrincipiaOptimize>
    <PrincipiaTestProject>true</PrincipiaTestProject>
    <PrincipiaTestProject  Condition="$(ProjectName) == ksp_plugin or
                                      $(ProjectName) == serialization or
                                      $(ProjectName) == benchmarks or
                                      $(ProjectName) == tools or
                                      $(ProjectName) == mathematica">false</PrincipiaTestProject>
    <!--Dependency paths.-->
    <PrincipiaDependencyConfiguration>Debug</PrincipiaDependencyConfiguration>
    <PrincipiaDependencyConfiguration Condition="$(PrincipiaOptimize)">Release</PrincipiaDependencyConfiguration>
    <!--Tools.-->
    <!--Protocompiler.-->
    <Protoc>$(SolutionDir)..\Google\protobuf\vsprojects\Release\x64\protoc</Protoc>
    <ProtocCommand>"$(Protoc)" -I"$(SolutionDir)." --cpp_out=.. "{0}"</ProtocCommand>
    <ProtocMessage>Generating C++ files for {0}</ProtocMessage>
    <ProtocOutputs>{0}.pb.h;{0}.pb.cc;</ProtocOutputs>
    <!--Principia tools.-->
    <PrincipiaGenerateProfiles>$(OutDir)tools.exe</PrincipiaGenerateProfiles>
    <PrincipiaGenerateProfilesCommand>"$(PrincipiaGenerateProfiles)" generate_profiles</PrincipiaGenerateProfilesCommand>
    <PrincipiaGenerateProfilesMessage>Generating C#/C++ files for {0}</PrincipiaGenerateProfilesMessage>
    <PrincipiaGenerateProfilesOutput>interface.generated.h;..\journal\player.generated.cc;..\journal\profiles.generated.h;..\journal\profiles.generated.cc;..\ksp_plugin_adapter\interface.generated.cs</PrincipiaGenerateProfilesOutput>
  </PropertyGroup>

  <!--Compiler.-->
  <PropertyGroup>
    <PlatformToolset>v140</PlatformToolset>
    <PlatformToolset Condition="$(PrincipiaCompilerClangLLVM)">LLVM-vs2014</PlatformToolset>
  </PropertyGroup>

  <!--Target.-->
  <PropertyGroup>
    <ConfigurationType Condition="$(ProjectName) == serialization">StaticLibrary</ConfigurationType>
    <ConfigurationType Condition="$(ProjectName) == ksp_plugin">DynamicLibrary</ConfigurationType>
    <ConfigurationType Condition="$(PrincipiaTestProject) or
                                  $(ProjectName) == tools or
                                  $(ProjectName) == benchmarks or
                                  $(ProjectName) == mathematica">Application</ConfigurationType>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="$(ConfigurationType)==Application">
    <Link>
      <SubSystem>Console</SubSystem>
    </Link>
  </ItemDefinitionGroup>

  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />

  <!--Common options.-->
  <PropertyGroup>
    <CharacterSet>Unicode</CharacterSet>
  </PropertyGroup>
  <ItemDefinitionGroup>
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <WarningLevel Condition="$(PrincipiaCompilerClangLLVM)">EnableAllWarnings</WarningLevel>
      <TreatWarningAsError Condition="!$(PrincipiaCompilerClangLLVM)">true</TreatWarningAsError>
      <SDLCheck>true</SDLCheck>
    </ClCompile>
    <Link>
      <GenerateDebugInformation>true</GenerateDebugInformation>
    </Link>
  </ItemDefinitionGroup>
  <!--Debug options.-->
  <PropertyGroup Condition="!$(PrincipiaOptimize)">
    <UseDebugLibraries>true</UseDebugLibraries>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="!$(PrincipiaOptimize)">
    <ClCompile>
      <Optimization>Disabled</Optimization>
    </ClCompile>
    <Link></Link>
  </ItemDefinitionGroup>
  <!--Release options.-->
  <PropertyGroup Condition="$(PrincipiaOptimize)">
    <UseDebugLibraries>false</UseDebugLibraries>
    <WholeProgramOptimization>true</WholeProgramOptimization>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="$(PrincipiaOptimize)">
    <ClCompile>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
    </ClCompile>
    <Link>
      <LinkTimeCodeGeneration>UseLinkTimeCodeGeneration</LinkTimeCodeGeneration>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
    </Link>
  </ItemDefinitionGroup>

  <!--Import our property sheets.-->
  <Import Project="$(SolutionDir)third_party_optional.props" />
  <Import Project="$(SolutionDir)suppress_useless_warnings.props" />
  <Import Project="$(SolutionDir)profiling.props" />
  <Import Project="$(SolutionDir)include_solution.props" />
  <Import Project="$(SolutionDir)..\Google\protobuf\vsprojects\portability_macros.props" />
  <Import Project="$(SolutionDir)google_protobuf.props" />
  <Import Project="$(SolutionDir)..\Google\glog\vsprojects\static_linking.props" />
  <Import Project="$(SolutionDir)..\Google\glog\vsprojects\portability_macros.props" />
  <Import Project="$(SolutionDir)google_glog.props" />
  <Import Project="$(SolutionDir)generate_version_translation_unit.props" />

  <ImportGroup Condition="$(PrincipiaTestProject)">
    <Import Project="$(SolutionDir)..\Google\googletest\googletest\msvc\portability_macros.props" />
    <Import Project="$(SolutionDir)google_googletest.props" />
    <Import Project="$(SolutionDir)google_googlemock_main.props" />
  </ImportGroup>

  <ImportGroup Condition="$(ProjectName) == benchmarks or
                          $(ProjectName) == ksp_plugin_test or
                          $(ProjectName) == journal">
    <Import Project="$(SolutionDir)..\Google\benchmark\msvc\portability_macros.props" />
    <Import Project="$(SolutionDir)..\Google\benchmark\msvc\windows_libraries.props" />
    <Import Project="$(SolutionDir)google_benchmark.props" />
  </ImportGroup>

  <!--Everybody depends on the serialization project.-->
  <ItemGroup Condition="$(ProjectName)!=serialization">
    <ProjectReference Include="$(SolutionDir)serialization\serialization.vcxproj">
      <Project>{5c482c18-bbae-484d-a211-a25c86370061}</Project>
    </ProjectReference>
  </ItemGroup>
  <!--journal depends on the ksp_plugin DLL.-->
  <ItemGroup Condition="$(ProjectName) == journal">
    <ProjectReference Include="..\ksp_plugin\ksp_plugin.vcxproj">
      <Project>{a3f94607-2666-408f-af98-0e47d61c98bb}</Project>
    </ProjectReference>
  </ItemGroup>

  <!--Copy things to GameData.-->
  <ItemDefinitionGroup Condition="$(ProjectName) == ksp_plugin">
    <PostBuildEvent>
      <Command>
        if not exist "$(SolutionDir)$(Configuration)\GameData\Principia\$(Platform)" mkdir "$(SolutionDir)$(Configuration)\GameData\Principia\$(Platform)"
        copy /Y "$(TargetPath)" "$(SolutionDir)$(Configuration)\GameData\Principia\$(Platform)"
        copy /Y "$(OutDir)$(TargetName).pdb" "$(SolutionDir)$(Configuration)\GameData\Principia\$(Platform)"
      </Command>
      <Message>Copying principia.dll to GameData</Message>
    </PostBuildEvent>
  </ItemDefinitionGroup>

  <!--This import must be at the end.-->
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
</Project>
